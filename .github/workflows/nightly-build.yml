name: Nightly Build
on:
  push:
    branches:
      - dev

jobs:
  libcore:
    name: Native Build (LibCore)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Golang Status
        run: find buildScript libcore/*.sh | xargs cat | sha1sum > golang_status
      - name: Libcore Status
        run: git ls-files libcore | xargs cat | sha1sum > libcore_status
      - name: LibCore Cache
        id: cache
        uses: actions/cache@v3
        with:
          path: |
            app/libs/libcore.aar
          key: ${{ hashFiles('.github/workflows/*', 'golang_status', 'libcore_status') }}
      - name: Install Golang
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/setup-go@v3
        with:
          go-version: ^1.21
      - name: Native Build
        if: steps.cache.outputs.cache-hit != 'true'
        run: ./run lib core
  dashboard:
    name: Build Dashboard
    runs-on: ubuntu-latest
    needs:
      - libcore
    steps:
      - name: Chaeckout
        uses: actions/checkout@v3
        with:
          repository: 'MetaCubeX/metacubexd'
      - uses: pnpm/action-setup@v2
        with:
          version: latest
      - name: Setup Nodejs
        uses: actions/setup-node@v3
        with:
          node-version: latest
          cache: pnpm
      - name: Install package and build
        run: |
          pnpm install
          pnpm build
      - name: Pack
        run: |
          mv dist/ Dash-metacubexd/
          zip -r dashboard.zip Dash-metacubexd/ -9
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: dashboard-artifact
          path: dashboard.zip
  build:
    name: Build OSS APK
    runs-on: ubuntu-latest
    needs:
      - libcore
      - dashboard
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Golang Status
        run: find buildScript libcore/*.sh | xargs cat | sha1sum > golang_status
      - name: Libcore Status
        run: git ls-files libcore | xargs cat | sha1sum > libcore_status
      - name: LibCore Cache
        uses: actions/cache@v3
        with:
          path: |
            app/libs/libcore.aar
          key: ${{ hashFiles('.github/workflows/*', 'golang_status', 'libcore_status') }}
      - name: Clean Dashboard
        run: |
          rm app/src/main/assets/dashboard.zip || true
      - name: Download Dashboard
        uses: actions/download-artifact@v3
        with:
          name: dashboard-artifact
          path: app/src/main/assets/dashboard.zip
      - name: Gradle cache
        uses: actions/cache@v3
        with:
          path: ~/.gradle
          key: gradle-oss-${{ hashFiles('**/*.gradle.kts') }}
      - name: Gradle Build
        env:
          BUILD_PLUGIN: none
        run: |
          # curl -Lo  app/src/main/assets/yacd.zip https://github.com/MetaCubeX/Yacd-meta/archive/refs/heads/gh-pages.zip
          echo "sdk.dir=${ANDROID_HOME}" > local.properties
          echo "ndk.dir=${ANDROID_HOME}/ndk/25.0.8775105" >> local.properties
          # export LOCAL_PROPERTIES="${{ secrets.LOCAL_PROPERTIES }}"
          ./run init action gradle
          # KEYSTORE_PASS="${{ secrets.KEYSTORE_PASS }}" ALIAS_NAME="${{ secrets.ALIAS_NAME }}" ALIAS_PASS="${{ secrets.ALIAS_PASS}}" ./gradlew clean app:assembleOssRelease
          ./gradlew clean app:assembleOssRelease

          # rename
          directory="app/build/outputs/apk/oss/release/"
          for file in "$directory"*; do
              filename=$(basename "$file")
              new_filename=$(echo "$filename" | sed 's/NB4A/CB4A/g')
              new_filepath="$directory$new_filename"
              mv "$file" "$new_filepath" || true
          done

          APK=$(find app/build/outputs/apk -name '*arm64-v8a*.apk')
          APK=$(dirname $APK)
          echo "APK=$APK" >> $GITHUB_ENV
      - uses: actions/upload-artifact@v3
        with:
          name: APKs
          path: ${{ env.APK }}

  f-droid:
    name: F-Droid Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Golang Status
        run: find buildScript libcore/*.sh | xargs cat | sha1sum > golang_status
      - name: Libcore Status
        run: git ls-files libcore | xargs cat | sha1sum > libcore_status
      - name: LibCore Cache
        id: cache
        uses: actions/cache@v3
        with:
          path: |
            app/libs/libcore.aar
          key: ${{ hashFiles('.github/workflows/*', 'golang_status', 'libcore_status') }}
      - name: Golang Cache
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/cache@v3
        with:
          path: build/golang
          key: go-${{ hashFiles('.github/workflows/*', 'golang_status') }}
      - name: Native Build
        if: steps.cache.outputs.cache-hit != 'true'
        run: ./run fdroid prebuild